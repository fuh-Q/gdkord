// <-- buttons -->
@mixin button-styles($color-class, $button-color, $glow: [on by default]) {
    .lookFilled__201d5.#{$color-class} {
        background: hsl(var($button-color));
        color: var(--interactive-active);
        border: none;
        border-radius: 5px;
        @if $glow != NO_GLOW {
            filter: drop-shadow(0 0 var(--default-drop-shadow) hsl(var($button-color)));
        }

        &:hover {
            background: hsl(var(#{$button-color}-hover));
            border-color: hsl(var(#{$button-color}-hover));
            @if $glow != NO_GLOW {
                filter: drop-shadow(
                    0 0 var(--default-drop-shadow) hsl(var(#{$button-color}-hover))
                );
            }
        }

        &:active {
            background: hsl(var(#{$button-color}-active));
            border-color: hsl(var(#{$button-color}-active));
            @if $glow != NO_GLOW {
                filter: drop-shadow(
                    0 0 var(--default-drop-shadow) hsl(var(#{$button-color}-active))
                );
            }
        }

        &:disabled {
            background: hsl(var(#{$button-color}-active));
            filter: none;
        }
    }

    .lookOutlined__201d5.#{$color-class} {
        background: transparent !important;
        filter: drop-shadow(0 0 var(--default-drop-shadow) hsla(var($button-color)));

        .contents__201d5 {
            color: hsla(var($button-color));
        }
    }
}

@include button-styles(colorPrimary__201d5, --gray, NO_GLOW);
@include button-styles(colorBrand__201d5, --gdkromatic);
@include button-styles(colorGreen__201d5, --green);
@include button-styles(colorRed__201d5, --red);

// <-- on hover scaling effect -->
button[class*="color"] {
    transform: scale(1.0001);
    transition: 0.2s ease-in-out !important;

    &:hover {
        transform: scale(1.04);
    }

    &:disabled {
        transform: none;
        transition: none;
    }
}

// <-- message buttons container -->
.container__5e208 {
    overflow: visible;
    margin-top: 2px;
}

// <-- outlined buttons hover effect --> //
button.lookOutlined__201d5 {
    .contents__201d5 {
        transition: 0.2s ease-in-out;
    }

    &:hover,
    &:active,
    &:focus {
        background: unset;

        .contents__201d5 {
            color: white !important;
        }
    }
}

// <-- vc action row (bottom left, above settings button) -->
.button_e131a9 .buttonColor_e131a9.buttonActive_e131a9,
.button_e131a9.buttonColor_e131a9.buttonActive_e131a9 {
    background: hsla(var(--green));
    filter: drop-shadow(0 0 var(--default-drop-shadow) hsla(var(--green)));
}

// <-- friend req button on nitro profiles -->
.custom-profile-theme .themeColor_fb7f94.primary_fb7f94 {
    filter: drop-shadow(
        0 0 var(--default-drop-shadow) var(--profile-gradient-button-color)
    );
}

// <-- circular page buttons (found in channel search) --> //
.pageControl_c15210 > .activeButton_c15210 {
    background: rgba(var(--phen-aqua));
    filter: drop-shadow(0 0 var(--default-drop-shadow) rgba(var(--phen-aqua)));
}

// <-- nitro profiles -->
.custom-user-profile-theme .themeColor_fb7f94.primary_fb7f94 {
    filter: drop-shadow(
        0 0 var(--default-drop-shadow) var(--profile-gradient-button-color)
    );
}
